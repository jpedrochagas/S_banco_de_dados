/* ============================================================ */
/*   Database SCHEMA:  bd_academico                      */
/*   Criando tabela para banco de dados academico                     */
/* ============================================================ */


CREATE SCHEMA BD_ACADEMICO;
SET search_path TO BD_ACADEMICO;

CREATE TABLE curso(
	idcur int not null CONSTRAINT idcur_pk primary key,
	nomecur char(25) not null CONSTRAINT nomecur_pk UNIQUE
);

CREATE TABLE aluno(
	idalu int not null,
	nomealu char(30) not null,
	tipoalu char(25) not null,
	idcurso int not null,
	UNIQUE (idalu),
	primary key (idalu)
);

CREATE TABLE disciplina(
	iddis int not null CONSTRAINT iddis primary key,
	nomedis char(30) not null,
	UNIQUE(iddis)
);

CREATE TABLE pre_requisito(
	iddis int not null,
	CONSTRAINT fk_iddis FOREIGN KEY (iddis) REFERENCES disciplina(iddis), 
	idpre int not null,
	CONSTRAINT idpre PRIMARY KEY (idpre), -corrigir idds e idpre como uma chave primaria composta
	UNIQUE (idpre)
);

CREATE TABLE professor(
	idprof int not null CONSTRAINT idprof primary key,
	nomepro char(30) not null
	- adicionar o UNIQUE AO IDPROF.
);

CREATE TABLE turma(
	idtur int not null,
	iddis int not null,
	ano int not null,
	semestre int not null,
	codtur int not null,
	CONSTRAINT fk_iddis FOREIGN KEY (iddis) REFERENCES disciplina(iddis),
	PRIMARY KEY(idtur, ano, semestre, codtur),
	UNIQUE(idtur)
);

CREATE TABLE turpro(
	idtur int not null,
	idprof int not null, - CHAVE ESTRANGEIRA NO IDPROF
	CONSTRAINT fk_idtur FOREIGN KEY (idtur) REFERENCES turma(idtur),
	PRIMARY KEY(idprof) - IDTUR JUNTO POR SER CHAVE COMPSTA
);

CREATE TABLE historico(
	idalu int not null,
	idtur int not null,
	nota int,
	CONSTRAINT fk_idalu FOREIGN KEY (idalu) REFERENCES aluno(idalu),
	CONSTRAINT fk_idtur FOREIGN KEY (idtur) REFERENCES turma(idtur)
	ADICIONAR PRIMARY KEY COMPOSTA EM IDALU E IDUR
);
